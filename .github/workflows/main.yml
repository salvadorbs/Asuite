# This is a basic workflow to help you get started with Actions

name: Build push events (debug mode)

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  pull_request:
  push:
    paths-ignore:
    - "README.md"
    branches:
      - master
      - develop
      - releases/*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [windows-latest]
        lazarus-versions: [dist]
        lazarus-packages: ["JPLib, JPPack, MORMot, HashLib, uniqueinstance, VirtualTreeView V5, LCLExtensions, KControls, BGRABitmap, BGRAControls, ASuiteComps"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Generate Cache Hash
      run: echo os=${{ matrix.operating-system }}-laz=${{ matrix.lazarus-versions }}-pkg=${{ matrix.lazarus-packages }} > cache
      
    - name: Cache
      id: cache
      uses: actions/cache@v2.1.1
      env:
        cache-name: cache-laz-v1
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: ${{ runner.temp }}\lazarus
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-build64bit-${{ env.cache-name }}-${{ hashFiles('cache') }}

    # Runs a single command using the runners shell
    - name: Install Lazarus
      if: steps.cache.outputs.cache-hit != 'true'
      uses: salvadorbs/setup-lazarus@master
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true' #fixed error 
      with:
        lazarus-version: ${{ matrix.lazarus-versions }}
        include-packages-opm: ${{ matrix.lazarus-packages }}
        include-packages-local: "${{ github.workspace}}/3p/ASuiteComps/ASuiteComps.lpk"

    - name: Download sqlite3fpc.7z (static sqlite3 library)
      if: steps.cache.outputs.cache-hit != 'true'
      uses: carlosperate/download-file-action@v1.0.3
      with:
        file-url: 'http://synopse.info/files/sqlite3fpc.7z'
        file-name: 'sqlite3fpc.7z'
        location: '${{ runner.temp }}/lazarus/Packages/mormot/'
    
    - name: Extract sqlite3fpc.7z in mORMot
      if: steps.cache.outputs.cache-hit != 'true'
      uses: DuckSoft/extract-7z-action@v1.0
      with:
        pathSource: '${{ runner.temp }}/lazarus/Packages/mormot/sqlite3fpc.7z' 
        pathTarget: '${{ runner.temp }}/lazarus/Packages/mormot/'

    - name: Validate Cache
      if: steps.cache.outputs.cache-hit == 'true'
      run: ${{ runner.temp }}\lazarus\lazbuild.exe --version && echo "::set-output name=success::true" || echo "::set-output name=success::false"

    - name: Build ASuite (Debug Mode)
      run: ${{ runner.temp }}\lazarus\lazbuild.exe "${{ github.workspace}}/ASuite.lpi" --no-write-project --build-mode=debug --primary-config-path=${{ runner.temp }}\lazarus\config

    - name: Upload the Build Artifact
      uses: actions/upload-artifact@v2.1.4
      with:
        # Artifact name
        name: ASuite build
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ github.workspace}}\bin
        # The desired behavior if no files are found using the provided path.
